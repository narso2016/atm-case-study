package com.nars.tutorials.screen;

import com.nars.tutorials.model.Account;
import com.nars.tutorials.validator.StringsValidator;

import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.util.Map;
import java.util.Scanner;

public class FundTransferScreen extends WithdrawalScreen {

    public static void destinationScreen(int keyVal, Map<Integer, Account> data){
        Scanner scan = new Scanner(System.in);
        System.out.println("<<<<Destination Account>>>> ");
        System.out.println("Please enter destination account and press enter to continue or");
        System.out.print("press enter to go back to Transaction: ");
        String destAcc = scan.nextLine();
        if(!StringsValidator.isNullOrEmpty(destAcc)){
            FundTransferScreen.amountScreen(destAcc, keyVal, data);
        }else {
           TransactionScreen.showScreen(keyVal,data);
        }

    }


    public static void amountScreen(String descAcc, int keyVal, Map<Integer, Account> datasource){
        Scanner scan = new Scanner(System.in);
        System.out.println("<<<<Transfer Amount>>>> ");
        System.out.println("Please enter transfer amount and press enter to continue or ");
        System.out.print("press enter to go back to Transaction:");
        String amount = scan.nextLine();
        DecimalFormat ft = new DecimalFormat("$###,###.##");
        BigDecimal availableBal = datasource.get(keyVal).getBalance();
        boolean checkBalance;
        BigDecimal currentBal;
        if(!StringsValidator.isNullOrEmpty(amount)){
            checkBalance = isAvailableBalance(keyVal, datasource, new BigDecimal(amount));
            if(checkBalance){
                currentBal = deductAmount(keyVal, datasource, new BigDecimal(amount));
                FundTransferScreen.referenceScreen(keyVal, descAcc, Integer.parseInt(amount), currentBal,datasource);
            } else {
                System.out.println("Insufficient balance " + ft.format(new BigDecimal(amount)));
                System.out.println("Current balance " +  ft.format(availableBal));
                FundTransferScreen.amountScreen(descAcc, keyVal, datasource);
            }
        } else {
            TransactionScreen.showScreen(keyVal, datasource);
        }



    }


    public static void referenceScreen(int keyVal, String desAcc, int amount, BigDecimal currentBal,
                                       Map<Integer, Account> datasource){
        Scanner scan = new Scanner(System.in);
        System.out.println("<<<<Reference Number>>>> ");
        System.out.print("Reference Number: (This is an autogenerated random 6 digits number)\n" +
                " press enter to continue:");
        int noref = scan.nextInt();
        FundTransferScreen.confirmScreen(keyVal, desAcc,amount,noref, currentBal, datasource);
    }

    public static void confirmScreen(int keyVal, String desAcc, int amount, int noref, BigDecimal currentBal,
                                     Map<Integer, Account> datasource){
        System.out.println("Transfer Confirmation:");
        System.out.println("Destination Account : "+ desAcc);
        System.out.println("Transfer Amount :$" + amount);
        System.out.println("Reference Number :" + noref);

        System.out.println("1. Confirm Trx");
        System.out.println("2. Cancel Trx");
        System.out.println("Choose option[2]");
        Scanner scan = new Scanner(System.in);
        int opsi = scan.nextInt();
        switch (opsi){
            case 1:
                datasource.get(keyVal).setBalance(currentBal);
                FundTransferScreen.summaryScreen(desAcc, amount, noref,currentBal);
            case 2:
                TransactionScreen.showScreen(keyVal, datasource);

        }
    }

    public static void summaryScreen(String desAcc, int amount, int noref, BigDecimal currentBal){
        System.out.println("Fund Transfer Summary :");
        System.out.println("Destination Account : "+ desAcc);
        System.out.println("Transfer Amount :$" + amount);
        System.out.println("Reference Number :" + noref);
        System.out.println("Balance:$"+ currentBal);

        System.out.println("1. Transaction");
        System.out.println("2. Exit");
        System.out.println("Choose option[2]");
    }
}
